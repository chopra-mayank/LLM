import { z } from "zod";

export const itineraryStateSchema = z.object({
  userInput: z.object({
    location: z.string(),
    preferences: z.array(z.string()),
    numberOfPeople: z.number(),
    duration: z.object({
      type: z.enum(["hours", "days"]),
      value: z.number(),
    }),
  }),
  rawActivitySuggestions: z.string().optional(), // Raw text output from activitySuggestor
  suggestions: z.array(z.string()).optional(), // Parsed activity suggestions from activitySuggestor

  // New field to store the structured itinerary generated by the LLM
  finalItinerary: z.object({
    duration: z.object({
      type: z.enum(["hours", "days"]),
      value: z.number(),
    }),
    days: z.array(z.object({
      dayNumber: z.number(),
      activities: z.array(z.object({
        description: z.string(),
      })),
    })),
  }).optional(),

  nextAction: z.enum(["activity", "planner", "END"]),
  error: z.string().optional(),
});